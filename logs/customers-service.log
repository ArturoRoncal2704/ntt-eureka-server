2025-09-08T11:13:39.529 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 9136 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T11:13:39.532 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T11:13:39.533 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T11:13:39.570 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T11:13:39.570 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers_service, profiles=[default], label=main, version=3a31093c21508dc2db8cfaf14c947c19ae15dfaa, state=null
2025-09-08T11:13:40.399 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T11:13:40.486 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T11:13:40.732 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T11:13:40.806 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:13:40.807 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:13:40.808 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:13:41.570 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@10fb4575, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7cc2c551]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T11:13:41.677 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:13:41.688 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:188}] to localhost:27017
2025-09-08T11:13:41.688 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:189}] to localhost:27017
2025-09-08T11:13:41.688 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=72031200}
2025-09-08T11:13:41.801 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:13:42.665 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T11:13:43.134 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T11:13:43.197 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T11:13:43.226 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T11:13:43.231 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:13:43.250 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T11:13:43.251 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:13:43.467 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$55248264.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.nttdata.CustomersServiceApplication.main(CustomersServiceApplication.java:10)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 68 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 81 more

2025-09-08T11:13:43.467 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T11:13:43.468 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$55248264.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.nttdata.CustomersServiceApplication.main(CustomersServiceApplication.java:10)

2025-09-08T11:13:43.469 INFO  [:] c.netflix.discovery.DiscoveryClient - Initial registry fetch from primary servers failed
2025-09-08T11:13:43.469 WARN  [:] c.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2025-09-08T11:13:43.470 INFO  [:] c.netflix.discovery.DiscoveryClient - Initial registry fetch from backup servers failed
2025-09-08T11:13:43.471 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T11:13:43.473 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T11:13:43.478 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757348023477 with initial instances count: 0
2025-09-08T11:13:43.479 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS_SERVICE with eureka with status UP
2025-09-08T11:13:43.479 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757348023479, current=UP, previous=STARTING]
2025-09-08T11:13:43.482 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:13:43.507 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T11:13:43.508 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T11:13:43.520 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2025-09-08T11:13:43.521 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T11:13:43.523 WARN  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2025-09-08T11:13:43.523 WARN  [:] c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2025-09-08T11:13:44.019 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 6.602 seconds (JVM running for 7.556)
2025-09-08T11:13:44.163 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:190}] to localhost:27017
2025-09-08T11:13:51.499 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS_SERVICE with eureka with status DOWN
2025-09-08T11:13:51.499 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757348031499, current=DOWN, previous=UP]
2025-09-08T11:13:51.499 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:13:51.620 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:13:55.628 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T11:13:58.642 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T11:13:58.663 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - deregister  status: 200
2025-09-08T11:13:58.667 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T11:14:02.717 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T11:14:02.717 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 19688 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T11:14:02.721 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T11:14:02.757 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T11:14:02.757 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers_service, profiles=[default], label=main, version=3a31093c21508dc2db8cfaf14c947c19ae15dfaa, state=null
2025-09-08T11:14:03.424 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T11:14:03.484 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T11:14:03.674 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T11:14:03.739 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:14:03.739 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:14:03.742 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:14:04.312 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@64a1116a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11e17893]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T11:14:04.386 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:191}] to localhost:27017
2025-09-08T11:14:04.386 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:192}] to localhost:27017
2025-09-08T11:14:04.387 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42947800}
2025-09-08T11:14:04.388 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:14:04.496 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:14:05.198 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T11:14:05.624 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T11:14:05.681 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T11:14:05.711 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T11:14:05.714 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:14:05.732 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T11:14:05.733 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:14:05.957 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:14:05.959 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T11:14:05.961 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T11:14:05.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757348045964 with initial instances count: 0
2025-09-08T11:14:05.966 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS_SERVICE with eureka with status UP
2025-09-08T11:14:05.966 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757348045966, current=UP, previous=STARTING]
2025-09-08T11:14:05.969 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:14:05.987 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T11:14:05.988 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T11:14:06.011 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:14:06.411 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 5.419 seconds (JVM running for 6.592)
2025-09-08T11:14:06.478 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:193}] to localhost:27017
2025-09-08T11:14:35.963 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:14:35.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:14:35.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:14:35.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:14:35.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:14:35.965 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-09-08T11:14:35.966 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:14:35.984 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:14:54.058 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS_SERVICE with eureka with status DOWN
2025-09-08T11:14:54.060 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757348094060, current=DOWN, previous=UP]
2025-09-08T11:14:54.060 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:14:54.068 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:14:58.238 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T11:15:01.254 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T11:15:01.272 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - deregister  status: 200
2025-09-08T11:15:01.278 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T11:17:09.048 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T11:17:09.054 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 38516 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T11:17:09.057 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T11:17:09.095 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T11:17:09.096 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers_service, profiles=[default], label=main, version=3a31093c21508dc2db8cfaf14c947c19ae15dfaa, state=null
2025-09-08T11:17:09.842 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T11:17:09.907 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T11:17:10.091 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T11:17:10.162 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:17:10.163 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:17:10.164 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:17:10.755 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2a136383, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@b01cb8d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T11:17:10.835 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:17:10.836 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:194}] to localhost:27017
2025-09-08T11:17:10.836 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:195}] to localhost:27017
2025-09-08T11:17:10.836 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47853400}
2025-09-08T11:17:10.969 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:17:11.892 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T11:17:12.365 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T11:17:12.454 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T11:17:12.500 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T11:17:12.506 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T11:17:12.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:17:12.790 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:17:12.792 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T11:17:12.796 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T11:17:12.800 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757348232800 with initial instances count: 0
2025-09-08T11:17:12.802 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS_SERVICE with eureka with status UP
2025-09-08T11:17:12.802 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757348232802, current=UP, previous=STARTING]
2025-09-08T11:17:12.804 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:17:12.833 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T11:17:12.834 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T11:17:12.877 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:17:13.328 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 6.156 seconds (JVM running for 7.214)
2025-09-08T11:17:13.400 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:196}] to localhost:27017
2025-09-08T11:17:42.796 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:17:42.796 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:17:42.796 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:17:42.797 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:17:42.797 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:17:42.797 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-09-08T11:17:42.797 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:17:42.817 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:22:12.545 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:27:12.556 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:32:12.571 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:37:12.579 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:42:12.583 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:47:12.598 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:52:05.634 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS_SERVICE with eureka with status DOWN
2025-09-08T11:52:05.635 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757350325635, current=DOWN, previous=UP]
2025-09-08T11:52:05.635 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:52:05.655 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:52:09.761 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T11:52:12.601 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:52:12.774 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T11:52:12.784 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2025-09-08T11:52:12.785 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T11:52:12.790 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2025-09-08T11:52:12.790 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T11:52:12.793 ERROR [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2025-09-08T11:52:12.798 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T11:52:24.744 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T11:52:24.746 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 27296 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T11:52:24.748 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T11:52:24.785 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T11:52:24.785 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers_service, profiles=[default], label=main, version=3a31093c21508dc2db8cfaf14c947c19ae15dfaa, state=null
2025-09-08T11:52:25.377 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T11:52:25.432 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T11:52:25.612 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T11:52:25.675 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:52:25.676 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:52:25.677 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T11:52:26.251 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@16d41725, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b6c2be6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T11:52:26.325 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:197}] to localhost:27017
2025-09-08T11:52:26.325 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:198}] to localhost:27017
2025-09-08T11:52:26.325 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42227000}
2025-09-08T11:52:26.327 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:52:26.432 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T11:52:27.129 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T11:52:27.556 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T11:52:27.613 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T11:52:27.642 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T11:52:27.645 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T11:52:27.664 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:52:27.951 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:52:27.953 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T11:52:27.955 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T11:52:27.960 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757350347960 with initial instances count: 0
2025-09-08T11:52:27.961 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS_SERVICE with eureka with status UP
2025-09-08T11:52:27.962 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757350347962, current=UP, previous=STARTING]
2025-09-08T11:52:27.964 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T11:52:27.983 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T11:52:27.984 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T11:52:28.063 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T11:52:28.375 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 5.42 seconds (JVM running for 6.28)
2025-09-08T11:52:28.435 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:199}] to localhost:27017
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T11:52:57.968 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-09-08T11:52:57.969 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T11:52:57.988 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T11:57:27.676 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:02:27.680 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:06:08.844 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS_SERVICE with eureka with status DOWN
2025-09-08T12:06:08.844 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351168844, current=DOWN, previous=UP]
2025-09-08T12:06:08.844 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T12:06:08.850 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T12:06:12.991 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T12:06:15.994 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T12:06:16.008 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS_SERVICE/host.docker.internal:customers_service:8086 - deregister  status: 200
2025-09-08T12:06:16.014 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T12:06:20.025 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T12:06:20.025 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 27236 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T12:06:20.029 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T12:06:20.102 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T12:06:20.103 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers_service, profiles=[default], label=main, version=3a31093c21508dc2db8cfaf14c947c19ae15dfaa, state=null
2025-09-08T12:06:20.902 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T12:06:20.988 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T12:06:21.231 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T12:06:21.317 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:06:21.318 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:06:21.319 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:06:22.078 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1aedf08d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@113dcaf8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T12:06:22.172 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:06:22.175 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:201}] to localhost:27017
2025-09-08T12:06:22.175 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:200}] to localhost:27017
2025-09-08T12:06:22.175 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57479200}
2025-09-08T12:06:22.305 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:06:23.201 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T12:06:23.757 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T12:06:23.824 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T12:06:23.857 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T12:06:23.861 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T12:06:23.883 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T12:06:24.117 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T12:06:24.121 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T12:06:24.124 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T12:06:24.128 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757351184128 with initial instances count: 2
2025-09-08T12:06:24.129 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS-SERVICE with eureka with status UP
2025-09-08T12:06:24.131 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351184131, current=UP, previous=STARTING]
2025-09-08T12:06:24.133 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T12:06:24.159 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T12:06:24.180 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T12:06:24.204 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers_service:8086 - registration status: 204
2025-09-08T12:06:24.655 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 6.515 seconds (JVM running for 7.425)
2025-09-08T12:06:24.728 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:202}] to localhost:27017
2025-09-08T12:08:27.414 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS-SERVICE with eureka with status DOWN
2025-09-08T12:08:27.414 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351307414, current=DOWN, previous=UP]
2025-09-08T12:08:27.415 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers_service:8086: registering service...
2025-09-08T12:08:27.423 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2025-09-08T12:08:27.423 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T12:08:27.436 INFO  [:] c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2025-09-08T12:08:27.436 WARN  [:] c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERS-SERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2025-09-08T12:08:27.438 WARN  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers_service:8086 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2025-09-08T12:08:27.438 WARN  [:] c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2025-09-08T12:10:03.278 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T12:10:03.283 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 35976 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T12:10:03.285 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T12:10:03.330 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T12:10:03.330 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers-service, profiles=[default], label=main, version=cdae9eea8907092d565abda5f11db2f1f6b5ec0d, state=null
2025-09-08T12:10:04.471 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T12:10:04.564 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T12:10:04.826 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T12:10:04.921 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:10:04.922 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:10:04.924 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:10:05.876 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@685d7ba5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16d41725]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T12:10:06.022 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:10:06.042 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:204}] to localhost:27017
2025-09-08T12:10:06.042 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:203}] to localhost:27017
2025-09-08T12:10:06.043 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=93108700}
2025-09-08T12:10:06.327 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:10:07.495 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T12:10:08.034 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T12:10:08.104 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T12:10:08.144 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T12:10:08.149 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:10:08.173 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T12:10:08.174 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T12:10:08.525 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T12:10:08.528 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T12:10:08.530 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T12:10:08.537 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757351408536 with initial instances count: 0
2025-09-08T12:10:08.538 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS-SERVICE with eureka with status UP
2025-09-08T12:10:08.538 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351408538, current=UP, previous=STARTING]
2025-09-08T12:10:08.541 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086: registering service...
2025-09-08T12:10:08.565 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T12:10:08.567 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T12:10:08.659 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - registration status: 204
2025-09-08T12:10:09.114 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 8.236 seconds (JVM running for 9.191)
2025-09-08T12:10:09.192 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:205}] to localhost:27017
2025-09-08T12:10:38.532 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T12:10:38.532 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T12:10:38.533 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T12:10:38.533 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T12:10:38.533 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T12:10:38.533 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-09-08T12:10:38.533 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T12:10:38.554 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T12:10:53.298 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS-SERVICE with eureka with status DOWN
2025-09-08T12:10:53.299 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351453299, current=DOWN, previous=UP]
2025-09-08T12:10:53.299 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086: registering service...
2025-09-08T12:10:53.308 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - registration status: 204
2025-09-08T12:10:57.451 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T12:11:00.467 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T12:11:00.485 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - deregister  status: 200
2025-09-08T12:11:00.490 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T12:11:04.357 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T12:11:04.359 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 29652 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T12:11:04.361 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T12:11:04.398 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T12:11:04.398 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers-service, profiles=[default], label=main, version=cdae9eea8907092d565abda5f11db2f1f6b5ec0d, state=null
2025-09-08T12:11:04.998 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T12:11:05.058 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T12:11:05.235 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T12:11:05.302 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:11:05.303 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:11:05.304 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T12:11:05.909 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@57c69937, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1ad1c363]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T12:11:05.990 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:206}] to localhost:27017
2025-09-08T12:11:05.990 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:207}] to localhost:27017
2025-09-08T12:11:05.991 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47581500}
2025-09-08T12:11:05.991 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:11:06.102 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T12:11:06.829 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T12:11:07.281 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08T12:11:07.342 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T12:11:07.372 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T12:11:07.377 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T12:11:07.397 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T12:11:07.619 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T12:11:07.621 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T12:11:07.623 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T12:11:07.628 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757351467627 with initial instances count: 2
2025-09-08T12:11:07.628 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS-SERVICE with eureka with status UP
2025-09-08T12:11:07.629 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757351467629, current=UP, previous=STARTING]
2025-09-08T12:11:07.630 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086: registering service...
2025-09-08T12:11:07.649 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T12:11:07.651 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T12:11:07.685 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - registration status: 204
2025-09-08T12:11:08.055 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 5.461 seconds (JVM running for 6.355)
2025-09-08T12:11:08.121 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:208}] to localhost:27017
2025-09-08T12:16:07.399 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:21:07.411 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:26:07.424 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:31:07.424 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:36:07.434 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:41:07.439 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:46:07.447 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:51:07.455 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T12:56:07.462 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:01:07.476 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:06:07.491 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:11:07.507 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:16:07.513 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:21:07.519 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:26:07.532 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:31:07.546 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:36:07.561 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:41:07.571 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:46:07.581 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:51:07.593 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T13:56:07.608 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:01:07.611 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:06:07.626 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:11:07.630 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:16:07.645 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:21:07.657 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:26:07.661 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:31:07.663 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:36:07.672 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:38:30 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08 14:38:30 INFO  [main] c.n.c.CreditServiceApplication - Starting CreditServiceApplication using Java 11.0.27 on Arturo with PID 12904 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CreditService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08 14:38:30 DEBUG [main] c.n.c.CreditServiceApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-09-08 14:38:30 INFO  [main] c.n.c.CreditServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08 14:38:32 WARN  [main] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08 14:38:32 WARN  [main] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08 14:38:34 WARN  [main] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08 14:38:34 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08 14:38:34 INFO  [main] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08 14:38:35 INFO  [main] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08 14:38:35 INFO  [main] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08 14:38:35 INFO  [main] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08 14:38:35 INFO  [main] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757360315240 with initial instances count: 3
2025-09-08 14:38:35 INFO  [main] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757360315241, current=UP, previous=STARTING]
2025-09-08 14:38:35 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585: registering service...
2025-09-08 14:38:35 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585 - registration status: 204
2025-09-08 14:38:36 INFO  [main] c.n.c.CreditServiceApplication - Started CreditServiceApplication in 7.26 seconds (JVM running for 8.197)
2025-09-08T14:41:07.679 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:43:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:46:07.687 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:48:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:51:07.697 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:53:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T14:56:07.702 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 14:58:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:01:07.717 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:03:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:06:07.722 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:08:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:11:07.732 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:13:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:16:07.747 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:18:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:21:07.753 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:23:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:26:07.755 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:28:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:31:07.769 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:33:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:36:07.784 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:38:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:41:07.797 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:43:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:46:07.804 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:48:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:51:07.817 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:53:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T15:56:07.832 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 15:58:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:01:07.847 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:03:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:06:07.857 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:08:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:11:07.865 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:13:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:16:07.873 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:18:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:21:07.882 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:23:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:26:07.896 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:28:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:31:07.902 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:33:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:36:07.918 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:38:35 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:41:07.928 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:42:30.752 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CUSTOMERS-SERVICE with eureka with status DOWN
2025-09-08T16:42:30.754 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757367750754, current=DOWN, previous=UP]
2025-09-08T16:42:30.755 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086: registering service...
2025-09-08T16:42:30.793 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - registration status: 204
2025-09-08 16:42:33 INFO  [SpringApplicationShutdownHook] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757367753330, current=DOWN, previous=UP]
2025-09-08 16:42:33 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585: registering service...
2025-09-08 16:42:33 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585 - registration status: 204
2025-09-08T16:42:35.100 INFO  [:] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08 16:42:37 INFO  [SpringApplicationShutdownHook] c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-09-08T16:42:38.118 INFO  [:] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08T16:42:38.140 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - deregister  status: 200
2025-09-08T16:42:38.157 INFO  [:] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08 16:42:40 INFO  [SpringApplicationShutdownHook] c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-09-08 16:42:40 INFO  [SpringApplicationShutdownHook] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585 - deregister  status: 200
2025-09-08 16:42:40 INFO  [SpringApplicationShutdownHook] c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-09-08T16:42:47.977 INFO  [:] c.n.CustomersServiceApplication - Starting CustomersServiceApplication using Java 11.0.27 on Arturo with PID 22396 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CustomersService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08T16:42:47.983 INFO  [:] c.n.CustomersServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T16:42:47.983 INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08T16:42:48.061 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-09-08T16:42:48.061 INFO  [:] o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customers-service, profiles=[default], label=main, version=cdae9eea8907092d565abda5f11db2f1f6b5ec0d, state=null
2025-09-08T16:42:49.360 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-09-08T16:42:49.471 INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 1 Reactive MongoDB repository interfaces.
2025-09-08T16:42:49.910 INFO  [:] o.s.cloud.context.scope.GenericScope - BeanFactory id=fa165e8b-0682-3562-93a0-d22796f92b4b
2025-09-08T16:42:50.071 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T16:42:50.073 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T16:42:50.075 INFO  [:] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-09-08T16:42:51.088 INFO  [:] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.27+8-LTS-232"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@11e17893, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@19eea77c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-09-08T16:42:51.200 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T16:42:51.200 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:235}] to localhost:27017
2025-09-08T16:42:51.200 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:234}] to localhost:27017
2025-09-08T16:42:51.202 INFO  [:] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=65945600}
2025-09-08T16:42:51.356 WARN  [:] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08T16:42:52.425 INFO  [:] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-09-08T16:42:53.072 WARN  [:] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08 16:42:53 INFO  [main] c.n.c.CreditServiceApplication - Starting CreditServiceApplication using Java 11.0.27 on Arturo with PID 39388 (C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\NTT_CreditService\target\classes started by Arturo in C:\Users\ronca\OneDrive\Escritorio\Dev\Programa NTTDATA\microservicios\eureka_server)
2025-09-08 16:42:53 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-09-08 16:42:53 DEBUG [main] c.n.c.CreditServiceApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-09-08 16:42:53 INFO  [main] c.n.c.CreditServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-08T16:42:53.178 INFO  [:] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-09-08T16:42:53.232 INFO  [:] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08T16:42:53.250 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:42:53.291 INFO  [:] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08T16:42:53.292 INFO  [:] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08T16:42:53.721 INFO  [:] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08T16:42:53.726 INFO  [:] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08T16:42:53.729 INFO  [:] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08T16:42:53.736 INFO  [:] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757367773735 with initial instances count: 4
2025-09-08T16:42:53.737 INFO  [:] o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMERS-SERVICE with eureka with status UP
2025-09-08T16:42:53.737 INFO  [:] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757367773737, current=UP, previous=STARTING]
2025-09-08T16:42:53.740 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086: registering service...
2025-09-08T16:42:53.776 INFO  [:] o.s.b.w.e.netty.NettyWebServer - Netty started on port 8086
2025-09-08T16:42:53.778 INFO  [:] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8086
2025-09-08T16:42:53.831 INFO  [:] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMERS-SERVICE/host.docker.internal:customers-service:8086 - registration status: 204
2025-09-08T16:42:54.732 INFO  [:] c.n.CustomersServiceApplication - Started CustomersServiceApplication in 9.272 seconds (JVM running for 10.979)
2025-09-08T16:42:54.968 INFO  [:] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:236}] to localhost:27017
2025-09-08 16:42:57 WARN  [main] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08 16:42:57 WARN  [main] o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-09-08 16:43:00 WARN  [main] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-09-08 16:43:01 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Application is null : false
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - The response status is 200
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-09-08 16:43:01 INFO  [main] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1757367781611 with initial instances count: 4
2025-09-08 16:43:01 INFO  [main] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1757367781613, current=UP, previous=STARTING]
2025-09-08 16:43:01 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585: registering service...
2025-09-08 16:43:01 INFO  [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_CREDIT-SERVICE/host.docker.internal:credit-service:8585 - registration status: 204
2025-09-08 16:43:03 INFO  [main] c.n.c.CreditServiceApplication - Started CreditServiceApplication in 11.936 seconds (JVM running for 13.601)
2025-09-08T16:47:53.296 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:48:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:52:53.305 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:53:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T16:57:53.314 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 16:58:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:02:53.319 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:03:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:07:53.327 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:08:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:12:53.330 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:13:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:17:53.337 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:18:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:22:53.352 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:23:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:27:53.364 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:28:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:32:53.376 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:33:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:37:53.390 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:38:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:42:53.401 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:43:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:47:53.403 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:48:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:52:53.407 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:53:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T17:57:53.410 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 17:58:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T18:02:53.420 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 18:03:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08T18:07:53.422 INFO  [:] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-09-08 18:08:01 INFO  [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
